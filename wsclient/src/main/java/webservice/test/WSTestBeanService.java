
/*
 * 
 */

package webservice.test;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2014-04-08T17:24:34.410+01:00
 * Generated source version: 2.3.3
 * 
 */


@WebServiceClient(name = "WSTestBeanService", 
                  wsdlLocation = "http://localhostte:8080/wstest/WSTestBeanService/WSTestBean?wsdl",
                  targetNamespace = "http://test.webservice/") 
public class WSTestBeanService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://test.webservice/", "WSTestBeanService");
    public final static QName WSTestBeanPort = new QName("http://test.webservice/", "WSTestBeanPort");
    static {
        URL url = null;
        try {
            url = new URL("http://vps50444.ovh.net:8080/wstest/WSTestBeanService/WSTestBean?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://localhost:8080/wstest/WSTestBeanService/WSTestBean?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public WSTestBeanService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSTestBeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSTestBeanService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WSTestBeanService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WSTestBeanService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public WSTestBeanService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WSTest
     */
    @WebEndpoint(name = "WSTestBeanPort")
    public WSTest getWSTestBeanPort() {
        return super.getPort(WSTestBeanPort, WSTest.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSTest
     */
    @WebEndpoint(name = "WSTestBeanPort")
    public WSTest getWSTestBeanPort(WebServiceFeature... features) {
        return super.getPort(WSTestBeanPort, WSTest.class, features);
    }

}
