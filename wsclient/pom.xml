<?xml version="1.0"?>
<!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. 
    and/or its affiliates, and individual contributors by the @authors tag. See 
    the copyright.txt in the distribution for a full listing of individual contributors. 
    Licensed under the Apache License, Version 2.0 (the "License"); you may not 
    use this file except in compliance with the License. You may obtain a copy 
    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
    by applicable law or agreed to in writing, software distributed under the 
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
    OF ANY KIND, either express or implied. See the License for the specific 
    language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>samlsso</groupId>
   <artifactId>wsclient</artifactId>
   <version>0.0.1-SNAPSHOT</version>
   <packaging>war</packaging>
   <name>EJB WS SAML Client</name>

   <url>http://jboss.org/jbossas</url>
   <licenses>
      <license>
         <name>Apache License, Version 2.0</name>
         <distribution>repo</distribution>
         <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      </license>
   </licenses>

   <properties>
      <!-- Explicitly declaring the source encoding eliminates the following 
         message: -->
      <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
         resources, i.e. build is platform dependent! -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

       <!-- JBoss dependency versions -->
       <version.org.jboss.as.plugins.maven.plugin>7.2.Final</version.org.jboss.as.plugins.maven.plugin>
       <version.org.jboss.spec.jboss.javaee.6.0>3.0.0.Final</version.org.jboss.spec.jboss.javaee.6.0>

       <!-- other plugin versions -->
       <version.compiler.plugin>2.3.1</version.compiler.plugin>
       <version.war.plugin>2.1.1</version.war.plugin>

       <!-- maven-compiler-plugin -->
       <maven.compiler.target>1.6</maven.compiler.target>
       <maven.compiler.source>1.6</maven.compiler.source>
   </properties>

   <dependencyManagement>
      <dependencies>
         <!-- Define the version of JBoss' Java EE 6 APIs we want to import. 
            Any dependencies from org.jboss.spec will have their version defined by this 
            BOM -->
         <!-- JBoss distributes a complete set of Java EE 6 APIs including
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
            a collection) of artifacts. We use this here so that we always get the correct
            versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can
            read this as the JBoss stack of the Java EE 6 APIs). You can actually
            use this stack with any version of JBoss AS that implements Java EE 6, not
            just JBoss AS 7! -->
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${version.org.jboss.spec.jboss.javaee.6.0}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.1.4.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.security.jacc</groupId>
			<artifactId>javax.security.jacc-api</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-jbas-common</artifactId>
			<version>2.1.6.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-api</artifactId>
			<version>2.7.10</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-bindings-soap</artifactId>
			<version>2.4.3</version>
		</dependency>         		

   </dependencies>

   <build>
      <!-- Set the name of the war, used as the context root when the app 
         is deployed -->
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>${version.war.plugin}</version>
            <configuration>
               <!-- Java EE 6 doesn't require web.xml, Maven needs to catch 
                  up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
         <!-- JBoss AS plugin to deploy war -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <version>${version.org.jboss.as.plugins.maven.plugin}</version>
            <executions>
                <execution>
                    <phase>install</phase>
                    <goals>
                        <goal>deploy</goal>
                    </goals>    <!-- only remote server needs-->
	                <configuration>
	                    <hostname>vps50444.ovh.net</hostname>
	                    <port>9999</port>
	                    <username>admin</username>
	                    <password>admin1</password>
	                </configuration>
                </execution>    
            </executions>            
         </plugin>
         <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
            annotation processors -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
             <version>${version.compiler.plugin}</version>
             <configuration>
                 <source>${maven.compiler.source}</source>
                 <target>${maven.compiler.target}</target>
            </configuration>
         </plugin>
      </plugins>
   </build>

  <profiles>
    <profile>
       <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
       <!-- Use this profile for any OpenShift specific customization your app will need. -->
       <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
       <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
       <id>openshift</id>
       <build>
          <plugins>
             <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                   <outputDirectory>deployments</outputDirectory>
                   <warName>ROOT</warName>
                   <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                   <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
             </plugin>
          </plugins>
       </build>
    </profile>
  </profiles> 
</project>

